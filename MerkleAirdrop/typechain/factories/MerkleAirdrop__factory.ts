/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MerkleAirdrop, MerkleAirdropInterface } from "../MerkleAirdrop";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "canClaim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001054380380620010548339818101604052810190620000379190620000ac565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508060a0818152505050506200015f565b6000815190506200008f816200012b565b92915050565b600081519050620000a68162000145565b92915050565b60008060408385031215620000c057600080fd5b6000620000d0858286016200007e565b9250506020620000e38582860162000095565b9150509250929050565b6000620000fa826200010b565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200013681620000ed565b81146200014257600080fd5b50565b620001508162000101565b81146200015c57600080fd5b50565b60805160601c60a051610ebe62000196600039600081816101b101526102080152600081816102da01526103870152610ebe6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806318894daf1461005c5780632eb4a7ab1461008c578063b391c508146100aa578063c884ef83146100c6578063fc0c546a146100f6575b600080fd5b61007660048036038101906100719190610829565b610114565b6040516100839190610af1565b60405180910390f35b610094610206565b6040516100a19190610b0c565b60405180910390f35b6100c460048036038101906100bf9190610881565b61022a565b005b6100e060048036038101906100db9190610800565b610365565b6040516100ed9190610af1565b60405180910390f35b6100fe610385565b60405161010b9190610aad565b60405180910390f35b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161580156101fd57506101fc838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050507f0000000000000000000000000000000000000000000000000000000000000000866040516020016101e19190610a4f565b604051602081830303815290604052805190602001206103a9565b5b90509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b610235338383610114565b610274576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026b90610b69565b60405180910390fd5b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061031e33670de0b6b3a76400007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166103c09092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f0c7ef932d3b91976772937f18d5ef9b39a9930bef486b576c374f047c4b512dc60405160405180910390a25050565b60006020528060005260406000206000915054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000826103b68584610446565b1490509392505050565b6104418363a9059cbb60e01b84846040516024016103df929190610ac8565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061051f565b505050565b60008082905060005b8451811015610514576000858281518110610493577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190508083116104d45782816040516020016104b7929190610a6a565b604051602081830303815290604052805190602001209250610500565b80836040516020016104e7929190610a6a565b6040516020818303038152906040528051906020012092505b50808061050c90610c80565b91505061044f565b508091505092915050565b6000610581826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166105e69092919063ffffffff16565b90506000815111156105e157808060200190518101906105a191906108c6565b6105e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d790610ba9565b60405180910390fd5b5b505050565b60606105f584846000856105fe565b90509392505050565b606082471015610643576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063a90610b49565b60405180910390fd5b61064c85610712565b61068b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068290610b89565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516106b49190610a96565b60006040518083038185875af1925050503d80600081146106f1576040519150601f19603f3d011682016040523d82523d6000602084013e6106f6565b606091505b5091509150610706828286610725565b92505050949350505050565b600080823b905060008111915050919050565b6060831561073557829050610785565b6000835111156107485782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077c9190610b27565b60405180910390fd5b9392505050565b60008135905061079b81610e5a565b92915050565b60008083601f8401126107b357600080fd5b8235905067ffffffffffffffff8111156107cc57600080fd5b6020830191508360208202830111156107e457600080fd5b9250929050565b6000815190506107fa81610e71565b92915050565b60006020828403121561081257600080fd5b60006108208482850161078c565b91505092915050565b60008060006040848603121561083e57600080fd5b600061084c8682870161078c565b935050602084013567ffffffffffffffff81111561086957600080fd5b610875868287016107a1565b92509250509250925092565b6000806020838503121561089457600080fd5b600083013567ffffffffffffffff8111156108ae57600080fd5b6108ba858286016107a1565b92509250509250929050565b6000602082840312156108d857600080fd5b60006108e6848285016107eb565b91505092915050565b6108f881610bfb565b82525050565b61090f61090a82610bfb565b610cc9565b82525050565b61091e81610c0d565b82525050565b61092d81610c19565b82525050565b61094461093f82610c19565b610cdb565b82525050565b600061095582610bc9565b61095f8185610bdf565b935061096f818560208601610c4d565b80840191505092915050565b600061098682610bd4565b6109908185610bea565b93506109a0818560208601610c4d565b6109a981610d26565b840191505092915050565b60006109c1602683610bea565b91506109cc82610d44565b604082019050919050565b60006109e4603383610bea565b91506109ef82610d93565b604082019050919050565b6000610a07601d83610bea565b9150610a1282610de2565b602082019050919050565b6000610a2a602a83610bea565b9150610a3582610e0b565b604082019050919050565b610a4981610c43565b82525050565b6000610a5b82846108fe565b60148201915081905092915050565b6000610a768285610933565b602082019150610a868284610933565b6020820191508190509392505050565b6000610aa2828461094a565b915081905092915050565b6000602082019050610ac260008301846108ef565b92915050565b6000604082019050610add60008301856108ef565b610aea6020830184610a40565b9392505050565b6000602082019050610b066000830184610915565b92915050565b6000602082019050610b216000830184610924565b92915050565b60006020820190508181036000830152610b41818461097b565b905092915050565b60006020820190508181036000830152610b62816109b4565b9050919050565b60006020820190508181036000830152610b82816109d7565b9050919050565b60006020820190508181036000830152610ba2816109fa565b9050919050565b60006020820190508181036000830152610bc281610a1d565b9050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000610c0682610c23565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610c6b578082015181840152602081019050610c50565b83811115610c7a576000848401525b50505050565b6000610c8b82610c43565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cbe57610cbd610cf7565b5b600182019050919050565b6000610cd482610ce5565b9050919050565b6000819050919050565b6000610cf082610d37565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f4d65726b6c6541697264726f703a2041646472657373206973206e6f7420612060008201527f63616e64696461746520666f7220636c61696d00000000000000000000000000602082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b610e6381610bfb565b8114610e6e57600080fd5b50565b610e7a81610c0d565b8114610e8557600080fd5b5056fea2646970667358221220391ce9c71a0842015acdf8315a4b5ee27b64544dc3fc6884b50a5acb2fdf627d64736f6c63430008040033";

export class MerkleAirdrop__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _token: string,
    _merkleRoot: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MerkleAirdrop> {
    return super.deploy(
      _token,
      _merkleRoot,
      overrides || {}
    ) as Promise<MerkleAirdrop>;
  }
  getDeployTransaction(
    _token: string,
    _merkleRoot: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, _merkleRoot, overrides || {});
  }
  attach(address: string): MerkleAirdrop {
    return super.attach(address) as MerkleAirdrop;
  }
  connect(signer: Signer): MerkleAirdrop__factory {
    return super.connect(signer) as MerkleAirdrop__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MerkleAirdropInterface {
    return new utils.Interface(_abi) as MerkleAirdropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MerkleAirdrop {
    return new Contract(address, _abi, signerOrProvider) as MerkleAirdrop;
  }
}
